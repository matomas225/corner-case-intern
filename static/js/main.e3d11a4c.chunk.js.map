{"version":3,"sources":["img/CircleChecked.svg","img/Circle.svg","Components/SideCard.tsx","Components/MainCard.tsx","App.tsx","index.tsx"],"names":["SideCard","display","sideCard","setTodoList","todoList","sideCardIndex","mainCardIndex","useState","imgSrc","setImgSrc","style","transform","margin","maxHeight","opacity","useEffect","isChecked","checked","notchecked","className","src","alt","onClick","newTodoList","sideCards","localStorage","setItem","JSON","stringify","name","link","color","textDecoration","href","MainCard","mainCard","isClicked","setIsClicked","border","setBorder","setDisplay","number","width","map","index","App","getItem","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3d11a4c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/CircleChecked.4b71a591.svg\";","export default __webpack_public_path__ + \"static/media/Circle.bb852527.svg\";","import { ReactElement, useEffect, useState } from \"react\";\nimport { ISideCard, ITodoItem } from \"../Interfaces\";\nimport checked from \"../img/CircleChecked.svg\";\nimport notchecked from \"../img/Circle.svg\";\n\n//Seting prop types\ninterface Props {\n  display: boolean;\n  sideCard: ISideCard;\n  setTodoList: React.Dispatch<React.SetStateAction<ITodoItem[]>>;\n  todoList: ITodoItem[];\n  sideCardIndex: number;\n  mainCardIndex: number;\n}\nfunction SideCard({ display, sideCard, setTodoList, todoList, sideCardIndex, mainCardIndex }: Props): ReactElement {\n  //states\n  const [imgSrc, setImgSrc] = useState<string>(\"\");\n\n  //style depending on display state\n  const style = {\n    transform: !display ? \"scaleY(0)\" : \"scaleY(1)\",\n    margin: !display ? \"0px\" : \"15px 0px 15px 0px\",\n    maxHeight: !display ? \"0px\" : \"150px\",\n    opacity: !display ? \"0\" : \"1\",\n  };\n  //changing checkbox image depending on sideCard.isChecked boolean\n  useEffect(() => {\n    if (sideCard.isChecked) {\n      setImgSrc(checked);\n    } else if (!sideCard.isChecked) {\n      setImgSrc(notchecked);\n    }\n  }, [todoList]);\n\n  //changing sideCards isChecked boolean depending on if it's clicked, then storing it to localStorage\n  const checkHandle = () => {\n    if (!sideCard.isChecked) {\n      let newTodoList = [...todoList];\n      newTodoList[mainCardIndex].sideCards[sideCardIndex].isChecked = true;\n      setTodoList(newTodoList);\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n    } else if (sideCard.isChecked) {\n      let newTodoList = [...todoList];\n      newTodoList[mainCardIndex].sideCards[sideCardIndex].isChecked = false;\n      setTodoList(newTodoList);\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n    }\n  };\n  return (\n    <div style={style}>\n      <div className=\"side-card\" style={style}>\n        <img src={imgSrc} alt=\"check-box\" onClick={checkHandle} />\n\n        <p>\n          {sideCard.name}\n          {/* Displaying link if link is in the sideCard */}\n          {sideCard.link ? (\n            <a style={{ color: \"#00A9A7\", textDecoration: \"none\" }} href={`mailto:${sideCard.link}`}>\n              {\" \" + sideCard.link}\n            </a>\n          ) : (\n            \"\"\n          )}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default SideCard;\n","import { ReactElement, useState } from \"react\";\nimport SideCard from \"./SideCard\";\nimport { ITodoItem } from \"../Interfaces\";\n\n//setting main card prop types\ninterface Props {\n  mainCardIndex: number;\n  mainCard: { number: number; name: string };\n  todoList: ITodoItem[];\n  setTodoList: React.Dispatch<React.SetStateAction<ITodoItem[]>>;\n}\nfunction MainCard({ mainCardIndex, mainCard, todoList, setTodoList }: Props): ReactElement {\n  //States\n  const [isClicked, setIsClicked] = useState<boolean>(false);\n  const [border, setBorder] = useState<string>(\"200px\");\n  const [display, setDisplay] = useState<boolean>(false);\n\n  //Setting States depending if checkbox is clicked\n  const clickHandle = () => {\n    if (!isClicked) {\n      setIsClicked(true);\n      setBorder(\"300px\");\n      setDisplay(true);\n    } else if (isClicked) {\n      setIsClicked(false);\n      setBorder(\"200px\");\n      setDisplay(false);\n    }\n  };\n\n  return (\n    <div>\n      <li>\n        <div className=\"main-card\" style={{ margin: \"0px 0px 0px 0px\" }} onClick={clickHandle}>\n          <h1>{mainCard.number}</h1>\n          <p>{mainCard.name}</p>\n          <div className=\"border\" style={{ width: border }}></div>\n        </div>\n        {/* maping todo list to get sideCards from mainCard */}\n        {todoList[mainCardIndex].sideCards.map((sideCard: { name: string; isChecked: boolean }, index: number) => {\n          return (\n            <SideCard\n              display={display}\n              sideCard={sideCard}\n              key={index}\n              setTodoList={setTodoList}\n              todoList={todoList}\n              sideCardIndex={index}\n              mainCardIndex={mainCardIndex}\n            />\n          );\n        })}\n      </li>\n    </div>\n  );\n}\n\nexport default MainCard;\n","import MainCard from \"./Components/MainCard\";\nimport { ReactElement, useEffect, useState } from \"react\";\nimport { ITodoItem } from \"./Interfaces\";\nfunction App(): ReactElement {\n  //States\n  const [todoList, setTodoList] = useState<ITodoItem[]>([\n    //store object in todoList state\n    {\n      number: 1,\n      name: \"Build test task\",\n      sideCards: [\n        {\n          name: \"Create repository\",\n          //this will change depending if checkbox is clicked or not\n          isChecked: false,\n        },\n        {\n          name: \"Implement designs\",\n          isChecked: false,\n        },\n        {\n          name: \"Implement functionality\",\n          isChecked: false,\n        },\n      ],\n    },\n    {\n      number: 2,\n      name: \"Submit your test task\",\n      sideCards: [\n        {\n          name: \"Open email client\",\n          isChecked: false,\n        },\n        {\n          name: \"Sent link with information to\",\n          link: \"careers@cornercasetech.com\",\n          isChecked: false,\n        },\n      ],\n    },\n    {\n      number: 3,\n      name: \"Participate in tech interview\",\n      sideCards: [\n        {\n          name: \"Talk with HR\",\n          isChecked: false,\n        },\n        {\n          name: \"Talk with Tech Team\",\n          isChecked: false,\n        },\n      ],\n    },\n    {\n      number: 4,\n      name: \"Receive answers\",\n      sideCards: [\n        { name: \"Receive anwsers\", isChecked: false },\n        {\n          name: \"Start your IT career\",\n          isChecked: false,\n        },\n      ],\n    },\n  ]);\n\n  useEffect(() => {\n    //if local storage is empty set local storage to todoList\n    if (localStorage.getItem(\"todoList\") === null) {\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n    } else {\n      //if local storage is set use it\n      setTodoList(JSON.parse(localStorage.getItem(\"todoList\") || \"[]\"));\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>CCT Lab Process</h1>\n      <ul>\n        {/* maping todo list */}\n        {todoList.map((mainCard: ITodoItem, index: number) => {\n          return (\n            <MainCard\n              mainCardIndex={index}\n              mainCard={mainCard}\n              todoList={todoList}\n              setTodoList={setTodoList}\n              key={index}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./Styles/Style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}